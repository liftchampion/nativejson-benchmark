# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/ulib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ULib
pkgincludedir = $(includedir)/ULib
pkglibdir = $(libdir)/ULib
pkglibexecdir = $(libexecdir)/ULib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
#am__append_1 = test_ssh_client
#am__append_2 = test_ldap
#am__append_3 = test_mongodb
#am__append_4 = test_thread
#am__append_5 = thread.test
#am__append_6 = test_zip
#am__append_7 = zip.test
#am__append_8 = test_tdb
#am__append_9 = tdb.test
#am__append_10 = test_pcre
#am__append_11 = pcre.test
#am__append_12 = test_des3 test_digest test_certificate test_crl test_pkcs10 test_ssl_client test_ssl_server test_https test_pkcs7 test_url
#am__append_13 = des3.test digest.test certificate.test crl.test pkcs10.test ssl_client_server.test https.test pkcs7.test url.test
##am__append_14 = test_timestamp
##am__append_15 = timestamp.test
#am__append_16 = test_ssh_client
#am__append_17 = ssh_client.test
#am__append_18 = test_ldap
#am__append_19 = ldap.test
#am__append_20 = test_curl
#am__append_21 = curl.test
#am__append_22 = test_magic
#am__append_23 = magic.test
#am__append_24 = test_expat test_soap_server test_soap_client
#am__append_25 = expat.test soap_server.test soap_client.test
am__append_26 = test_memory_pool
am__append_27 = memory_pool.test
#am__append_28 = test_dbi
#am__append_29 = dbi.test
#am__append_30 = test_orm
#am__append_31 = orm.test
#am__append_32 = test_event
#am__append_33 = event.test
am__append_34 = test_process test_interrupt test_unixsocket_client test_unixsocket_server test_arping
am__append_35 = process.test interrupt.test unixsocket.test
#am__append_36 = -lubsan
#am__append_37 = -lubsan
#am__append_38 = test_plugin
#am__append_39 = plugin.test
check_PROGRAMS = $(am__EXEEXT_19)
subdir = tests/ulib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_package.m4 \
	$(top_srcdir)/m4/ac_compilation_environment.m4 \
	$(top_srcdir)/m4/ac_compilation_options.m4 \
	$(top_srcdir)/m4/ac_compile_check_sizeof.m4 \
	$(top_srcdir)/m4/ac_cxx_old_iostream.m4 \
	$(top_srcdir)/m4/ac_fallocate.m4 \
	$(top_srcdir)/m4/ac_try_flag.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_14.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/socket_SO_RCVTIMEO.m4 \
	$(top_srcdir)/m4/m4_ax_python_devel.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/ulib/internal/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 = $(top_builddir)/src/ulib/libulib.la
#product1_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__product1_la_SOURCES_DIST = plugin/product1.cpp
am__dirstamp = $(am__leading_dot)dirstamp
#am_product1_la_OBJECTS = plugin/product1.lo
product1_la_OBJECTS = $(am_product1_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
product1_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(product1_la_LDFLAGS) $(LDFLAGS) -o $@
#am_product1_la_rpath =
#product2_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__product2_la_SOURCES_DIST = plugin/product2.cpp
#am_product2_la_OBJECTS = plugin/product2.lo
product2_la_OBJECTS = $(am_product2_la_OBJECTS)
product2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(product2_la_LDFLAGS) $(LDFLAGS) -o $@
#am_product2_la_rpath =
#am__EXEEXT_1 = test_ssh_client$(EXEEXT)
#am__EXEEXT_2 = test_ldap$(EXEEXT)
#am__EXEEXT_3 = test_mongodb$(EXEEXT)
#am__EXEEXT_4 = test_thread$(EXEEXT)
#am__EXEEXT_5 = test_zip$(EXEEXT)
#am__EXEEXT_6 = test_tdb$(EXEEXT)
#am__EXEEXT_7 = test_pcre$(EXEEXT)
#am__EXEEXT_8 = test_des3$(EXEEXT) test_digest$(EXEEXT) \
#	test_certificate$(EXEEXT) test_crl$(EXEEXT) \
#	test_pkcs10$(EXEEXT) test_ssl_client$(EXEEXT) \
#	test_ssl_server$(EXEEXT) test_https$(EXEEXT) \
#	test_pkcs7$(EXEEXT) test_url$(EXEEXT)
##am__EXEEXT_9 = test_timestamp$(EXEEXT)
#am__EXEEXT_10 = test_curl$(EXEEXT)
#am__EXEEXT_11 = test_magic$(EXEEXT)
#am__EXEEXT_12 = test_expat$(EXEEXT) \
#	test_soap_server$(EXEEXT) \
#	test_soap_client$(EXEEXT)
am__EXEEXT_13 = test_memory_pool$(EXEEXT)
#am__EXEEXT_14 = test_dbi$(EXEEXT)
#am__EXEEXT_15 = test_orm$(EXEEXT)
#am__EXEEXT_16 = test_event$(EXEEXT)
am__EXEEXT_17 = test_process$(EXEEXT) \
	test_interrupt$(EXEEXT) \
	test_unixsocket_client$(EXEEXT) \
	test_unixsocket_server$(EXEEXT) \
	test_arping$(EXEEXT)
#am__EXEEXT_18 = test_plugin$(EXEEXT)
am__EXEEXT_19 = test_timeval$(EXEEXT) test_timer$(EXEEXT) \
	test_notifier$(EXEEXT) test_string$(EXEEXT) test_file$(EXEEXT) \
	test_cdb$(EXEEXT) test_rdb$(EXEEXT) test_file_config$(EXEEXT) \
	test_log$(EXEEXT) test_bit_array$(EXEEXT) test_vector$(EXEEXT) \
	test_options$(EXEEXT) test_application$(EXEEXT) \
	test_tree$(EXEEXT) test_compress$(EXEEXT) test_cache$(EXEEXT) \
	test_date$(EXEEXT) test_services$(EXEEXT) test_base64$(EXEEXT) \
	test_header$(EXEEXT) test_entity$(EXEEXT) \
	test_ipaddress$(EXEEXT) test_socket$(EXEEXT) test_ftp$(EXEEXT) \
	test_http$(EXEEXT) test_rdb_client$(EXEEXT) \
	test_tokenizer$(EXEEXT) test_query_parser$(EXEEXT) \
	test_multipart$(EXEEXT) test_command$(EXEEXT) \
	test_dialog$(EXEEXT) test_rdb_server$(EXEEXT) \
	test_json$(EXEEXT) test_server$(EXEEXT) test_redis$(EXEEXT) \
	test_elasticsearch$(EXEEXT) test_smtp$(EXEEXT) \
	test_pop3$(EXEEXT) test_imap$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \
	$(am__EXEEXT_8) $(am__EXEEXT_9) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_10) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13) $(am__EXEEXT_14) \
	$(am__EXEEXT_15) $(am__EXEEXT_16) $(am__EXEEXT_17) \
	$(am__EXEEXT_18)
am_test_application_OBJECTS = test_application.$(OBJEXT)
test_application_OBJECTS = $(am_test_application_OBJECTS)
test_application_LDADD = $(LDADD)
test_application_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_arping_SOURCES_DIST = test_arping.cpp
am_test_arping_OBJECTS = test_arping.$(OBJEXT)
test_arping_OBJECTS = $(am_test_arping_OBJECTS)
test_arping_LDADD = $(LDADD)
test_arping_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_base64_OBJECTS = test_base64.$(OBJEXT)
test_base64_OBJECTS = $(am_test_base64_OBJECTS)
test_base64_LDADD = $(LDADD)
test_base64_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_bit_array_OBJECTS = test_bit_array.$(OBJEXT)
test_bit_array_OBJECTS = $(am_test_bit_array_OBJECTS)
test_bit_array_LDADD = $(LDADD)
test_bit_array_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_cache_OBJECTS = test_cache.$(OBJEXT)
test_cache_OBJECTS = $(am_test_cache_OBJECTS)
test_cache_LDADD = $(LDADD)
test_cache_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_cdb_OBJECTS = test_cdb.$(OBJEXT)
test_cdb_OBJECTS = $(am_test_cdb_OBJECTS)
test_cdb_LDADD = $(LDADD)
test_cdb_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_certificate_SOURCES_DIST = test_certificate.cpp
#am_test_certificate_OBJECTS = test_certificate.$(OBJEXT)
test_certificate_OBJECTS = $(am_test_certificate_OBJECTS)
test_certificate_LDADD = $(LDADD)
test_certificate_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_command_OBJECTS = test_command.$(OBJEXT)
test_command_OBJECTS = $(am_test_command_OBJECTS)
test_command_LDADD = $(LDADD)
test_command_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_compress_OBJECTS = test_compress.$(OBJEXT)
test_compress_OBJECTS = $(am_test_compress_OBJECTS)
test_compress_LDADD = $(LDADD)
test_compress_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_crl_SOURCES_DIST = test_crl.cpp
#am_test_crl_OBJECTS = test_crl.$(OBJEXT)
test_crl_OBJECTS = $(am_test_crl_OBJECTS)
test_crl_LDADD = $(LDADD)
test_crl_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_curl_SOURCES_DIST = test_curl.cpp
#am_test_curl_OBJECTS = test_curl.$(OBJEXT)
test_curl_OBJECTS = $(am_test_curl_OBJECTS)
test_curl_LDADD = $(LDADD)
test_curl_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_date_OBJECTS = test_date.$(OBJEXT)
test_date_OBJECTS = $(am_test_date_OBJECTS)
test_date_LDADD = $(LDADD)
test_date_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_dbi_SOURCES_DIST = test_dbi.cpp
#am_test_dbi_OBJECTS = test_dbi.$(OBJEXT)
test_dbi_OBJECTS = $(am_test_dbi_OBJECTS)
test_dbi_LDADD = $(LDADD)
test_dbi_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_des3_SOURCES_DIST = test_des3.cpp
#am_test_des3_OBJECTS = test_des3.$(OBJEXT)
test_des3_OBJECTS = $(am_test_des3_OBJECTS)
test_des3_LDADD = $(LDADD)
test_des3_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_dialog_OBJECTS = test_dialog.$(OBJEXT)
test_dialog_OBJECTS = $(am_test_dialog_OBJECTS)
test_dialog_LDADD = $(LDADD)
test_dialog_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_digest_SOURCES_DIST = test_digest.cpp
#am_test_digest_OBJECTS = test_digest.$(OBJEXT)
test_digest_OBJECTS = $(am_test_digest_OBJECTS)
test_digest_LDADD = $(LDADD)
test_digest_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_elasticsearch_OBJECTS = test_elasticsearch.$(OBJEXT)
test_elasticsearch_OBJECTS = $(am_test_elasticsearch_OBJECTS)
test_elasticsearch_LDADD = $(LDADD)
test_elasticsearch_DEPENDENCIES =  \
	$(top_builddir)/src/ulib/libulib.la
am_test_entity_OBJECTS = test_entity.$(OBJEXT)
test_entity_OBJECTS = $(am_test_entity_OBJECTS)
test_entity_LDADD = $(LDADD)
test_entity_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_event_SOURCES_DIST = test_event.cpp
#am_test_event_OBJECTS = test_event.$(OBJEXT)
test_event_OBJECTS = $(am_test_event_OBJECTS)
test_event_LDADD = $(LDADD)
test_event_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_expat_SOURCES_DIST = test_expat.cpp
#am_test_expat_OBJECTS = test_expat.$(OBJEXT)
test_expat_OBJECTS = $(am_test_expat_OBJECTS)
test_expat_LDADD = $(LDADD)
test_expat_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_file_OBJECTS = test_file.$(OBJEXT)
test_file_OBJECTS = $(am_test_file_OBJECTS)
test_file_LDADD = $(LDADD)
test_file_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_file_config_OBJECTS = test_file_config.$(OBJEXT)
test_file_config_OBJECTS = $(am_test_file_config_OBJECTS)
test_file_config_LDADD = $(LDADD)
test_file_config_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_ftp_OBJECTS = test_ftp.$(OBJEXT)
test_ftp_OBJECTS = $(am_test_ftp_OBJECTS)
test_ftp_LDADD = $(LDADD)
test_ftp_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_header_OBJECTS = test_header.$(OBJEXT)
test_header_OBJECTS = $(am_test_header_OBJECTS)
test_header_LDADD = $(LDADD)
test_header_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_http_OBJECTS = test_http.$(OBJEXT)
test_http_OBJECTS = $(am_test_http_OBJECTS)
test_http_LDADD = $(LDADD)
test_http_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_https_SOURCES_DIST = test_https.cpp
#am_test_https_OBJECTS = test_https.$(OBJEXT)
test_https_OBJECTS = $(am_test_https_OBJECTS)
test_https_LDADD = $(LDADD)
test_https_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_imap_OBJECTS = test_imap.$(OBJEXT)
test_imap_OBJECTS = $(am_test_imap_OBJECTS)
test_imap_LDADD = $(LDADD)
test_imap_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_interrupt_SOURCES_DIST = test_interrupt.cpp
am_test_interrupt_OBJECTS = test_interrupt.$(OBJEXT)
test_interrupt_OBJECTS = $(am_test_interrupt_OBJECTS)
am__DEPENDENCIES_2 =
test_interrupt_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_ipaddress_OBJECTS = test_ipaddress.$(OBJEXT)
test_ipaddress_OBJECTS = $(am_test_ipaddress_OBJECTS)
test_ipaddress_LDADD = $(LDADD)
test_ipaddress_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_json_OBJECTS = test_json.$(OBJEXT)
test_json_OBJECTS = $(am_test_json_OBJECTS)
test_json_LDADD = $(LDADD)
test_json_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_ldap_SOURCES_DIST = test_ldap.cpp
#am_test_ldap_OBJECTS = test_ldap.$(OBJEXT)
test_ldap_OBJECTS = $(am_test_ldap_OBJECTS)
test_ldap_LDADD = $(LDADD)
test_ldap_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_log_OBJECTS = test_log.$(OBJEXT)
test_log_OBJECTS = $(am_test_log_OBJECTS)
test_log_LDADD = $(LDADD)
test_log_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_magic_SOURCES_DIST = test_magic.cpp
#am_test_magic_OBJECTS = test_magic.$(OBJEXT)
test_magic_OBJECTS = $(am_test_magic_OBJECTS)
test_magic_LDADD = $(LDADD)
test_magic_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_memory_pool_SOURCES_DIST = test_memory_pool.cpp
am_test_memory_pool_OBJECTS =  \
	test_memory_pool.$(OBJEXT)
test_memory_pool_OBJECTS = $(am_test_memory_pool_OBJECTS)
test_memory_pool_LDADD = $(LDADD)
test_memory_pool_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_mongodb_OBJECTS = test_mongodb.$(OBJEXT)
test_mongodb_OBJECTS = $(am_test_mongodb_OBJECTS)
test_mongodb_LDADD = $(LDADD)
test_mongodb_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_multipart_OBJECTS = test_multipart.$(OBJEXT)
test_multipart_OBJECTS = $(am_test_multipart_OBJECTS)
test_multipart_LDADD = $(LDADD)
test_multipart_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_notifier_OBJECTS = test_notifier.$(OBJEXT)
test_notifier_OBJECTS = $(am_test_notifier_OBJECTS)
test_notifier_LDADD = $(LDADD)
test_notifier_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_options_OBJECTS = test_options.$(OBJEXT)
test_options_OBJECTS = $(am_test_options_OBJECTS)
test_options_LDADD = $(LDADD)
test_options_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_orm_SOURCES_DIST = test_orm.cpp
#am_test_orm_OBJECTS = test_orm.$(OBJEXT)
test_orm_OBJECTS = $(am_test_orm_OBJECTS)
test_orm_LDADD = $(LDADD)
test_orm_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_pcre_SOURCES_DIST = test_pcre.cpp
#am_test_pcre_OBJECTS = test_pcre.$(OBJEXT)
test_pcre_OBJECTS = $(am_test_pcre_OBJECTS)
test_pcre_LDADD = $(LDADD)
test_pcre_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_pkcs10_SOURCES_DIST = test_pkcs10.cpp
#am_test_pkcs10_OBJECTS = test_pkcs10.$(OBJEXT)
test_pkcs10_OBJECTS = $(am_test_pkcs10_OBJECTS)
test_pkcs10_LDADD = $(LDADD)
test_pkcs10_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_pkcs7_SOURCES_DIST = test_pkcs7.cpp
#am_test_pkcs7_OBJECTS = test_pkcs7.$(OBJEXT)
test_pkcs7_OBJECTS = $(am_test_pkcs7_OBJECTS)
test_pkcs7_LDADD = $(LDADD)
test_pkcs7_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_plugin_SOURCES_DIST = test_plugin.cpp
#am_test_plugin_OBJECTS =  \
#	test_plugin.$(OBJEXT)
test_plugin_OBJECTS = $(am_test_plugin_OBJECTS)
test_plugin_LDADD = $(LDADD)
test_plugin_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_pop3_OBJECTS = test_pop3.$(OBJEXT)
test_pop3_OBJECTS = $(am_test_pop3_OBJECTS)
test_pop3_LDADD = $(LDADD)
test_pop3_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_process_SOURCES_DIST = test_process.cpp
am_test_process_OBJECTS = test_process.$(OBJEXT)
test_process_OBJECTS = $(am_test_process_OBJECTS)
test_process_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_test_query_parser_OBJECTS = test_query_parser.$(OBJEXT)
test_query_parser_OBJECTS = $(am_test_query_parser_OBJECTS)
test_query_parser_LDADD = $(LDADD)
test_query_parser_DEPENDENCIES =  \
	$(top_builddir)/src/ulib/libulib.la
am_test_rdb_OBJECTS = test_rdb.$(OBJEXT)
test_rdb_OBJECTS = $(am_test_rdb_OBJECTS)
test_rdb_LDADD = $(LDADD)
test_rdb_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_rdb_client_OBJECTS = test_rdb_client.$(OBJEXT)
test_rdb_client_OBJECTS = $(am_test_rdb_client_OBJECTS)
test_rdb_client_LDADD = $(LDADD)
test_rdb_client_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_rdb_server_OBJECTS = test_rdb_server.$(OBJEXT)
test_rdb_server_OBJECTS = $(am_test_rdb_server_OBJECTS)
test_rdb_server_LDADD = $(LDADD)
test_rdb_server_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_redis_OBJECTS = test_redis.$(OBJEXT)
test_redis_OBJECTS = $(am_test_redis_OBJECTS)
test_redis_LDADD = $(LDADD)
test_redis_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_server_OBJECTS = test_server.$(OBJEXT)
test_server_OBJECTS = $(am_test_server_OBJECTS)
test_server_LDADD = $(LDADD)
test_server_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_services_OBJECTS = test_services.$(OBJEXT)
test_services_OBJECTS = $(am_test_services_OBJECTS)
test_services_LDADD = $(LDADD)
test_services_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_smtp_OBJECTS = test_smtp.$(OBJEXT)
test_smtp_OBJECTS = $(am_test_smtp_OBJECTS)
test_smtp_LDADD = $(LDADD)
test_smtp_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_soap_client_SOURCES_DIST = test_soap_client.cpp
#am_test_soap_client_OBJECTS = test_soap_client.$(OBJEXT)
test_soap_client_OBJECTS = $(am_test_soap_client_OBJECTS)
test_soap_client_LDADD = $(LDADD)
test_soap_client_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_soap_server_SOURCES_DIST = test_soap_server.cpp
#am_test_soap_server_OBJECTS = test_soap_server.$(OBJEXT)
test_soap_server_OBJECTS = $(am_test_soap_server_OBJECTS)
test_soap_server_LDADD = $(LDADD)
test_soap_server_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_socket_OBJECTS = test_socket.$(OBJEXT)
test_socket_OBJECTS = $(am_test_socket_OBJECTS)
test_socket_LDADD = $(LDADD)
test_socket_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_ssh_client_SOURCES_DIST = test_ssh_client.cpp
#am_test_ssh_client_OBJECTS = test_ssh_client.$(OBJEXT)
test_ssh_client_OBJECTS = $(am_test_ssh_client_OBJECTS)
test_ssh_client_LDADD = $(LDADD)
test_ssh_client_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_ssl_client_SOURCES_DIST = test_ssl_client.cpp
#am_test_ssl_client_OBJECTS = test_ssl_client.$(OBJEXT)
test_ssl_client_OBJECTS = $(am_test_ssl_client_OBJECTS)
test_ssl_client_LDADD = $(LDADD)
test_ssl_client_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_ssl_server_SOURCES_DIST = test_ssl_server.cpp
#am_test_ssl_server_OBJECTS = test_ssl_server.$(OBJEXT)
test_ssl_server_OBJECTS = $(am_test_ssl_server_OBJECTS)
test_ssl_server_LDADD = $(LDADD)
test_ssl_server_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_string_OBJECTS = test_string.$(OBJEXT)
test_string_OBJECTS = $(am_test_string_OBJECTS)
test_string_LDADD = $(LDADD)
test_string_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_tdb_SOURCES_DIST = test_tdb.cpp
#am_test_tdb_OBJECTS = test_tdb.$(OBJEXT)
test_tdb_OBJECTS = $(am_test_tdb_OBJECTS)
test_tdb_LDADD = $(LDADD)
test_tdb_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_thread_SOURCES_DIST = test_thread.cpp
#am_test_thread_OBJECTS = test_thread.$(OBJEXT)
test_thread_OBJECTS = $(am_test_thread_OBJECTS)
test_thread_LDADD = $(LDADD)
test_thread_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_timer_OBJECTS = test_timer.$(OBJEXT)
test_timer_OBJECTS = $(am_test_timer_OBJECTS)
test_timer_LDADD = $(LDADD)
test_timer_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_timestamp_SOURCES_DIST = test_timestamp.cpp
##am_test_timestamp_OBJECTS =  \
##	test_timestamp.$(OBJEXT)
test_timestamp_OBJECTS = $(am_test_timestamp_OBJECTS)
test_timestamp_LDADD = $(LDADD)
test_timestamp_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_timeval_OBJECTS = test_timeval.$(OBJEXT)
test_timeval_OBJECTS = $(am_test_timeval_OBJECTS)
test_timeval_LDADD = $(LDADD)
test_timeval_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_tokenizer_OBJECTS = test_tokenizer.$(OBJEXT)
test_tokenizer_OBJECTS = $(am_test_tokenizer_OBJECTS)
test_tokenizer_LDADD = $(LDADD)
test_tokenizer_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_tree_OBJECTS = test_tree.$(OBJEXT)
test_tree_OBJECTS = $(am_test_tree_OBJECTS)
test_tree_LDADD = $(LDADD)
test_tree_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_unixsocket_client_SOURCES_DIST = test_unixsocket_client.cpp
am_test_unixsocket_client_OBJECTS =  \
	test_unixsocket_client.$(OBJEXT)
test_unixsocket_client_OBJECTS = $(am_test_unixsocket_client_OBJECTS)
test_unixsocket_client_LDADD = $(LDADD)
test_unixsocket_client_DEPENDENCIES =  \
	$(top_builddir)/src/ulib/libulib.la
am__test_unixsocket_server_SOURCES_DIST = test_unixsocket_server.cpp
am_test_unixsocket_server_OBJECTS =  \
	test_unixsocket_server.$(OBJEXT)
test_unixsocket_server_OBJECTS = $(am_test_unixsocket_server_OBJECTS)
test_unixsocket_server_LDADD = $(LDADD)
test_unixsocket_server_DEPENDENCIES =  \
	$(top_builddir)/src/ulib/libulib.la
am__test_url_SOURCES_DIST = test_url.cpp
#am_test_url_OBJECTS = test_url.$(OBJEXT)
test_url_OBJECTS = $(am_test_url_OBJECTS)
test_url_LDADD = $(LDADD)
test_url_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am_test_vector_OBJECTS = test_vector.$(OBJEXT)
test_vector_OBJECTS = $(am_test_vector_OBJECTS)
test_vector_LDADD = $(LDADD)
test_vector_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
am__test_zip_SOURCES_DIST = test_zip.cpp
#am_test_zip_OBJECTS = test_zip.$(OBJEXT)
test_zip_OBJECTS = $(am_test_zip_OBJECTS)
test_zip_LDADD = $(LDADD)
test_zip_DEPENDENCIES = $(top_builddir)/src/ulib/libulib.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(product1_la_SOURCES) $(product2_la_SOURCES) \
	$(test_application_SOURCES) $(test_arping_SOURCES) \
	$(test_base64_SOURCES) $(test_bit_array_SOURCES) \
	$(test_cache_SOURCES) $(test_cdb_SOURCES) \
	$(test_certificate_SOURCES) $(test_command_SOURCES) \
	$(test_compress_SOURCES) $(test_crl_SOURCES) \
	$(test_curl_SOURCES) $(test_date_SOURCES) $(test_dbi_SOURCES) \
	$(test_des3_SOURCES) $(test_dialog_SOURCES) \
	$(test_digest_SOURCES) $(test_elasticsearch_SOURCES) \
	$(test_entity_SOURCES) $(test_event_SOURCES) \
	$(test_expat_SOURCES) $(test_file_SOURCES) \
	$(test_file_config_SOURCES) $(test_ftp_SOURCES) \
	$(test_header_SOURCES) $(test_http_SOURCES) \
	$(test_https_SOURCES) $(test_imap_SOURCES) \
	$(test_interrupt_SOURCES) $(test_ipaddress_SOURCES) \
	$(test_json_SOURCES) $(test_ldap_SOURCES) $(test_log_SOURCES) \
	$(test_magic_SOURCES) $(test_memory_pool_SOURCES) \
	$(test_mongodb_SOURCES) $(test_multipart_SOURCES) \
	$(test_notifier_SOURCES) $(test_options_SOURCES) \
	$(test_orm_SOURCES) $(test_pcre_SOURCES) \
	$(test_pkcs10_SOURCES) $(test_pkcs7_SOURCES) \
	$(test_plugin_SOURCES) $(test_pop3_SOURCES) \
	$(test_process_SOURCES) $(test_query_parser_SOURCES) \
	$(test_rdb_SOURCES) $(test_rdb_client_SOURCES) \
	$(test_rdb_server_SOURCES) $(test_redis_SOURCES) \
	$(test_server_SOURCES) $(test_services_SOURCES) \
	$(test_smtp_SOURCES) $(test_soap_client_SOURCES) \
	$(test_soap_server_SOURCES) $(test_socket_SOURCES) \
	$(test_ssh_client_SOURCES) $(test_ssl_client_SOURCES) \
	$(test_ssl_server_SOURCES) $(test_string_SOURCES) \
	$(test_tdb_SOURCES) $(test_thread_SOURCES) \
	$(test_timer_SOURCES) $(test_timestamp_SOURCES) \
	$(test_timeval_SOURCES) $(test_tokenizer_SOURCES) \
	$(test_tree_SOURCES) $(test_unixsocket_client_SOURCES) \
	$(test_unixsocket_server_SOURCES) $(test_url_SOURCES) \
	$(test_vector_SOURCES) $(test_zip_SOURCES)
DIST_SOURCES = $(am__product1_la_SOURCES_DIST) \
	$(am__product2_la_SOURCES_DIST) $(test_application_SOURCES) \
	$(am__test_arping_SOURCES_DIST) $(test_base64_SOURCES) \
	$(test_bit_array_SOURCES) $(test_cache_SOURCES) \
	$(test_cdb_SOURCES) $(am__test_certificate_SOURCES_DIST) \
	$(test_command_SOURCES) $(test_compress_SOURCES) \
	$(am__test_crl_SOURCES_DIST) $(am__test_curl_SOURCES_DIST) \
	$(test_date_SOURCES) $(am__test_dbi_SOURCES_DIST) \
	$(am__test_des3_SOURCES_DIST) $(test_dialog_SOURCES) \
	$(am__test_digest_SOURCES_DIST) $(test_elasticsearch_SOURCES) \
	$(test_entity_SOURCES) $(am__test_event_SOURCES_DIST) \
	$(am__test_expat_SOURCES_DIST) $(test_file_SOURCES) \
	$(test_file_config_SOURCES) $(test_ftp_SOURCES) \
	$(test_header_SOURCES) $(test_http_SOURCES) \
	$(am__test_https_SOURCES_DIST) $(test_imap_SOURCES) \
	$(am__test_interrupt_SOURCES_DIST) $(test_ipaddress_SOURCES) \
	$(test_json_SOURCES) $(am__test_ldap_SOURCES_DIST) \
	$(test_log_SOURCES) $(am__test_magic_SOURCES_DIST) \
	$(am__test_memory_pool_SOURCES_DIST) $(test_mongodb_SOURCES) \
	$(test_multipart_SOURCES) $(test_notifier_SOURCES) \
	$(test_options_SOURCES) $(am__test_orm_SOURCES_DIST) \
	$(am__test_pcre_SOURCES_DIST) $(am__test_pkcs10_SOURCES_DIST) \
	$(am__test_pkcs7_SOURCES_DIST) $(am__test_plugin_SOURCES_DIST) \
	$(test_pop3_SOURCES) $(am__test_process_SOURCES_DIST) \
	$(test_query_parser_SOURCES) $(test_rdb_SOURCES) \
	$(test_rdb_client_SOURCES) $(test_rdb_server_SOURCES) \
	$(test_redis_SOURCES) $(test_server_SOURCES) \
	$(test_services_SOURCES) $(test_smtp_SOURCES) \
	$(am__test_soap_client_SOURCES_DIST) \
	$(am__test_soap_server_SOURCES_DIST) $(test_socket_SOURCES) \
	$(am__test_ssh_client_SOURCES_DIST) \
	$(am__test_ssl_client_SOURCES_DIST) \
	$(am__test_ssl_server_SOURCES_DIST) $(test_string_SOURCES) \
	$(am__test_tdb_SOURCES_DIST) $(am__test_thread_SOURCES_DIST) \
	$(test_timer_SOURCES) $(am__test_timestamp_SOURCES_DIST) \
	$(test_timeval_SOURCES) $(test_tokenizer_SOURCES) \
	$(test_tree_SOURCES) \
	$(am__test_unixsocket_client_SOURCES_DIST) \
	$(am__test_unixsocket_server_SOURCES_DIST) \
	$(am__test_url_SOURCES_DIST) $(test_vector_SOURCES) \
	$(am__test_zip_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/missing aclocal-1.15
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = gcc-ar
AS = as
AUTOCONF = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/missing autoconf
AUTOHEADER = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/missing autoheader
AUTOMAKE = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/missing automake-1.15
AWK = gawk
CC = /opt/rh/devtoolset-9/root/usr/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2  -Werror-implicit-function-declaration -Wstrict-prototypes -Wc++-compat -Wmissing-prototypes -Wnested-externs -Wdeclaration-after-statement -Wold-style-definition -Wsizeof-pointer-memaccess
CPP = /opt/rh/devtoolset-9/root/usr/bin/cpp
CPPFLAGS =  -mcrc32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -pipe   -Wstrict-aliasing=2 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wwrite-strings -Wmissing-declarations -Wpacked -Wswitch-enum -Wmissing-format-attribute -Winit-self -Wformat -Wenum-compare -Wlogical-not-parentheses -Wsizeof-array-argument -Wbool-compare -Wno-unused-result -Wshadow -Wsuggest-attribute=pure -Wsuggest-attribute=noreturn -Wlogical-op -Wduplicated-cond -Wtautological-compare -Wswitch-bool -Wshift-negative-value -Wshift-overflow -Wshift-overflow=2 -Wnull-dereference -Wnonnull -fno-stack-protector -ffast-math -ftree-vectorize -fno-crossjumping -fno-gcse -fpartial-inlining -Ofast -flto -ffat-lto-objects -fuse-linker-plugin -march=native -mtune=native -Winline -Wno-unused-parameter -Wno-unused-variable   
CXX = /opt/rh/devtoolset-9/root/usr/bin/g++
CXXCPP = /opt/rh/devtoolset-9/root/usr/bin/g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -I/usr/local/include -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti  -fno-check-new -fno-enforce-eh-specs -Wno-deprecated -Wdelete-non-virtual-dtor -Wodr -Wterminate -Wlto-type-mismatch -Wsubobject-linkage -Wplacement-new -Wvirtual-inheritance -Wnamespaces
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GCC_AR = /usr/local/gcc5/bin/gcc-ar
GREP = /usr/bin/grep
HAVE_CXX11 = 1
HAVE_CXX14 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /opt/rh/devtoolset-9/root/usr/libexec/gcc/x86_64-redhat-linux/9/ld -m elf_x86_64
LDFLAGS =  -L/usr/local/lib -Wl,-O1 -Wl,--as-needed -Wl,-z,now,-O1,--hash-style=gnu,--sort-common -Wl,--as-needed
LEX = 
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MODULE_LIBTOOL_OPTIONS = -shared -export-dynamic -avoid-version
MYSQL_CONFIG = 
MYSQL_INCLUDE = 
MYSQL_LDFLAGS = 
MYSQL_LIBS = 
NM = gcc-nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ULib
PACKAGE_BUGREPORT = stefano.casazza@gmail.com
PACKAGE_NAME = ULib
PACKAGE_STRING = ULib 1.4.2
PACKAGE_TARNAME = ULib
PACKAGE_URL = http://stefanocasazza.github.io/ULib/
PACKAGE_VERSION = 1.4.2
PAGESPEED_ROOT_DIR = 
PATH_SEPARATOR = :
PGSQL_INCLUDE = 
PGSQL_LDFLAGS = 
PGSQL_LIBS = 
PG_CONFIG = 
PHPCONFIG = 
PHPCONFIGINCLUDES = 
PHPCONFIGLDFLAGS = 
PHPCONFIGLIBS = 
PKG_CONFIG = /usr/bin/pkg-config
POW_LIB = 
PRG_LDFLAGS = 
PYTHON = 
PYTHONCONFIGLDFLAGS = 
PYTHONCONFIGLIBS = 
PYTHONCPPFLAGS = 
PYTHON_CPPFLAGS = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = gcc-ranlib
RPM_CONFIGURE = --enable-static --enable-shared
RUBYCONFIGINCLUDES = 
RUBYCONFIGLDFLAGS = 
RUBYCONFIGLIBS = 
RUBYCPPFLAGS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_INCLUDE = 
SQLITE3_LDFLAGS = 
SQLITE3_LIBS = 
STATIC_SERVLET_MAKE = 
STD_GNU11 = 
STRIP = strip
ULIB = ulib
ULIBS = 
ULIB_LIBS =  /opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/libstdc++.a /opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/libgcc.a  -lpthread -lrt -ldl -lc
ULIB_MODULEDIR = /usr/local/libexec
ULIB_SYSCONFDIR = /usr/local/etc
ULIB_VERSION = 1.4.2
USP_FLAGS = 
USP_LDFLAGS = 
USP_LIBS = 
VERSION = 1.4.2
WINDRES = 
XLEX = 
XYACC = 
YACC = 
YFLAGS = 
abs_builddir = /home/gg/code/nativejson-benchmark/thirdparty/ULib/tests/ulib
abs_srcdir = /home/gg/code/nativejson-benchmark/thirdparty/ULib/tests/ulib
abs_top_builddir = /home/gg/code/nativejson-benchmark/thirdparty/ULib
abs_top_srcdir = /home/gg/code/nativejson-benchmark/thirdparty/ULib
ac_ct_AR = ar
ac_ct_CC = /opt/rh/devtoolset-9/root/usr/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
cpp = /usr/local/gcc5/bin/cpp
cv_path_ruby = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gg/code/nativejson-benchmark/thirdparty/ULib/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mcpp = no
mkdir_p = $(MKDIR_P)
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = ## dist-shar dist-zip
EXTRA_DIST = random.cdb plugin inp ok *.test *.cpp CA private server_rpc.cfg file_config.cf file_config.gperf \
				 file_config.gperf.sh file_config.key test_bison.h dialog.test redis.test elasticsearch.test twilio.test

MAINTAINERCLEANFILES = Makefile.in
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
LDADD =  $(top_builddir)/src/ulib/libulib.la  /opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/libstdc++.a /opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9/libgcc.a  -lpthread -lrt -ldl -lc
PRG = test_timeval test_timer test_notifier test_string test_file \
	test_cdb test_rdb test_file_config test_log test_bit_array \
	test_vector test_options test_application test_tree \
	test_compress test_cache test_date test_services test_base64 \
	test_header test_entity test_ipaddress test_socket test_ftp \
	test_http test_rdb_client test_tokenizer test_query_parser \
	test_multipart test_command test_dialog test_rdb_server \
	test_json test_server test_redis test_elasticsearch test_smtp \
	test_pop3 test_imap $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_6) \
	$(am__append_8) $(am__append_10) $(am__append_12) \
	$(am__append_14) $(am__append_16) $(am__append_18) \
	$(am__append_20) $(am__append_22) $(am__append_24) \
	$(am__append_26) $(am__append_28) $(am__append_30) \
	$(am__append_32) $(am__append_34) $(am__append_38)
TST = timeval.test timer.test notifier.test string.test file.test \
	cdb.test rdb.test file_config.test log.test vector.test \
	options.test application.test tree.test compress.test \
	cache.test date.test services.test base64.test header.test \
	entity.test ipaddress.test socket.test ftp.test http.test \
	tokenizer.test query_parser.test multipart.test \
	rdb_client_server.test command.test json.test server.test \
	server_rpc.test $(am__append_5) $(am__append_7) \
	$(am__append_9) $(am__append_11) $(am__append_13) \
	$(am__append_15) $(am__append_17) $(am__append_19) \
	$(am__append_21) $(am__append_23) $(am__append_25) \
	$(am__append_27) $(am__append_29) $(am__append_31) \
	$(am__append_33) $(am__append_35) $(am__append_39)
test_smtp_SOURCES = test_smtp.cpp
test_pop3_SOURCES = test_pop3.cpp
test_imap_SOURCES = test_imap.cpp
test_ipaddress_SOURCES = test_ipaddress.cpp
test_socket_SOURCES = test_socket.cpp
test_ftp_SOURCES = test_ftp.cpp
test_http_SOURCES = test_http.cpp
test_timeval_SOURCES = test_timeval.cpp
test_timer_SOURCES = test_timer.cpp
test_notifier_SOURCES = test_notifier.cpp
test_string_SOURCES = test_string.cpp
test_file_SOURCES = test_file.cpp
test_bit_array_SOURCES = test_bit_array.cpp
test_cdb_SOURCES = test_cdb.cpp
test_rdb_SOURCES = test_rdb.cpp
test_file_config_SOURCES = test_file_config.cpp
test_log_SOURCES = test_log.cpp
test_vector_SOURCES = test_vector.cpp
test_options_SOURCES = test_options.cpp
test_application_SOURCES = test_application.cpp
test_tree_SOURCES = test_tree.cpp
test_compress_SOURCES = test_compress.cpp
test_cache_SOURCES = test_cache.cpp
test_date_SOURCES = test_date.cpp
test_services_SOURCES = test_services.cpp
test_base64_SOURCES = test_base64.cpp
test_header_SOURCES = test_header.cpp
test_entity_SOURCES = test_entity.cpp
test_rdb_client_SOURCES = test_rdb_client.cpp
test_tokenizer_SOURCES = test_tokenizer.cpp
test_query_parser_SOURCES = test_query_parser.cpp
test_multipart_SOURCES = test_multipart.cpp
test_command_SOURCES = test_command.cpp
test_dialog_SOURCES = test_dialog.cpp
test_rdb_server_SOURCES = test_rdb_server.cpp
test_json_SOURCES = test_json.cpp
test_server_SOURCES = test_server.cpp
test_redis_SOURCES = test_redis.cpp
test_mongodb_SOURCES = test_mongodb.cpp
test_elasticsearch_SOURCES = test_elasticsearch.cpp
#test_thread_SOURCES = test_thread.cpp
#test_zip_SOURCES = test_zip.cpp
#test_tdb_SOURCES = test_tdb.cpp
#test_pcre_SOURCES = test_pcre.cpp
#test_des3_SOURCES = test_des3.cpp
#test_digest_SOURCES = test_digest.cpp
#test_certificate_SOURCES = test_certificate.cpp
#test_crl_SOURCES = test_crl.cpp
#test_pkcs10_SOURCES = test_pkcs10.cpp
#test_pkcs7_SOURCES = test_pkcs7.cpp
#test_ssl_client_SOURCES = test_ssl_client.cpp
#test_ssl_server_SOURCES = test_ssl_server.cpp
#test_https_SOURCES = test_https.cpp
#test_url_SOURCES = test_url.cpp
##test_timestamp_SOURCES = test_timestamp.cpp
#test_ssh_client_SOURCES = test_ssh_client.cpp
#test_ldap_SOURCES = test_ldap.cpp
#test_curl_SOURCES = test_curl.cpp
#test_magic_SOURCES = test_magic.cpp
#test_expat_SOURCES = test_expat.cpp
#test_soap_client_SOURCES = test_soap_client.cpp
#test_soap_server_SOURCES = test_soap_server.cpp
test_memory_pool_SOURCES = test_memory_pool.cpp
#test_dbi_SOURCES = test_dbi.cpp
#test_orm_SOURCES = test_orm.cpp
#test_event_SOURCES = test_event.cpp
test_arping_SOURCES = test_arping.cpp
test_process_SOURCES = test_process.cpp
test_interrupt_SOURCES = test_interrupt.cpp
test_unixsocket_client_SOURCES = test_unixsocket_client.cpp
test_unixsocket_server_SOURCES = test_unixsocket_server.cpp
test_process_LDADD = $(LDADD) $(am__append_36)
test_interrupt_LDADD = $(LDADD) $(am__append_37)
#test_plugin_SOURCES = test_plugin.cpp
#product1_la_SOURCES = plugin/product1.cpp
#product1_la_LIBADD = $(LDADD)
#product1_la_LDFLAGS = -module -rpath /nowhere -shared -export-dynamic -avoid-version
#product2_la_SOURCES = plugin/product2.cpp
#product2_la_LIBADD = $(LDADD)
#product2_la_LDFLAGS = -module -rpath /nowhere -shared -export-dynamic -avoid-version
#noinst_LTLIBRARIES = product1.la product2.la
TESTS = $(TST) ../reset.color
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/ulib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/ulib/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
plugin/$(am__dirstamp):
	@$(MKDIR_P) plugin
	@: > plugin/$(am__dirstamp)
plugin/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plugin/$(DEPDIR)
	@: > plugin/$(DEPDIR)/$(am__dirstamp)
plugin/product1.lo: plugin/$(am__dirstamp) \
	plugin/$(DEPDIR)/$(am__dirstamp)

product1.la: $(product1_la_OBJECTS) $(product1_la_DEPENDENCIES) $(EXTRA_product1_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(product1_la_LINK) $(am_product1_la_rpath) $(product1_la_OBJECTS) $(product1_la_LIBADD) $(LIBS)
plugin/product2.lo: plugin/$(am__dirstamp) \
	plugin/$(DEPDIR)/$(am__dirstamp)

product2.la: $(product2_la_OBJECTS) $(product2_la_DEPENDENCIES) $(EXTRA_product2_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(product2_la_LINK) $(am_product2_la_rpath) $(product2_la_OBJECTS) $(product2_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test_application$(EXEEXT): $(test_application_OBJECTS) $(test_application_DEPENDENCIES) $(EXTRA_test_application_DEPENDENCIES) 
	@rm -f test_application$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_application_OBJECTS) $(test_application_LDADD) $(LIBS)

test_arping$(EXEEXT): $(test_arping_OBJECTS) $(test_arping_DEPENDENCIES) $(EXTRA_test_arping_DEPENDENCIES) 
	@rm -f test_arping$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_arping_OBJECTS) $(test_arping_LDADD) $(LIBS)

test_base64$(EXEEXT): $(test_base64_OBJECTS) $(test_base64_DEPENDENCIES) $(EXTRA_test_base64_DEPENDENCIES) 
	@rm -f test_base64$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_base64_OBJECTS) $(test_base64_LDADD) $(LIBS)

test_bit_array$(EXEEXT): $(test_bit_array_OBJECTS) $(test_bit_array_DEPENDENCIES) $(EXTRA_test_bit_array_DEPENDENCIES) 
	@rm -f test_bit_array$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bit_array_OBJECTS) $(test_bit_array_LDADD) $(LIBS)

test_cache$(EXEEXT): $(test_cache_OBJECTS) $(test_cache_DEPENDENCIES) $(EXTRA_test_cache_DEPENDENCIES) 
	@rm -f test_cache$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_cache_OBJECTS) $(test_cache_LDADD) $(LIBS)

test_cdb$(EXEEXT): $(test_cdb_OBJECTS) $(test_cdb_DEPENDENCIES) $(EXTRA_test_cdb_DEPENDENCIES) 
	@rm -f test_cdb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_cdb_OBJECTS) $(test_cdb_LDADD) $(LIBS)

test_certificate$(EXEEXT): $(test_certificate_OBJECTS) $(test_certificate_DEPENDENCIES) $(EXTRA_test_certificate_DEPENDENCIES) 
	@rm -f test_certificate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_certificate_OBJECTS) $(test_certificate_LDADD) $(LIBS)

test_command$(EXEEXT): $(test_command_OBJECTS) $(test_command_DEPENDENCIES) $(EXTRA_test_command_DEPENDENCIES) 
	@rm -f test_command$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_command_OBJECTS) $(test_command_LDADD) $(LIBS)

test_compress$(EXEEXT): $(test_compress_OBJECTS) $(test_compress_DEPENDENCIES) $(EXTRA_test_compress_DEPENDENCIES) 
	@rm -f test_compress$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_compress_OBJECTS) $(test_compress_LDADD) $(LIBS)

test_crl$(EXEEXT): $(test_crl_OBJECTS) $(test_crl_DEPENDENCIES) $(EXTRA_test_crl_DEPENDENCIES) 
	@rm -f test_crl$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_crl_OBJECTS) $(test_crl_LDADD) $(LIBS)

test_curl$(EXEEXT): $(test_curl_OBJECTS) $(test_curl_DEPENDENCIES) $(EXTRA_test_curl_DEPENDENCIES) 
	@rm -f test_curl$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_curl_OBJECTS) $(test_curl_LDADD) $(LIBS)

test_date$(EXEEXT): $(test_date_OBJECTS) $(test_date_DEPENDENCIES) $(EXTRA_test_date_DEPENDENCIES) 
	@rm -f test_date$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_date_OBJECTS) $(test_date_LDADD) $(LIBS)

test_dbi$(EXEEXT): $(test_dbi_OBJECTS) $(test_dbi_DEPENDENCIES) $(EXTRA_test_dbi_DEPENDENCIES) 
	@rm -f test_dbi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dbi_OBJECTS) $(test_dbi_LDADD) $(LIBS)

test_des3$(EXEEXT): $(test_des3_OBJECTS) $(test_des3_DEPENDENCIES) $(EXTRA_test_des3_DEPENDENCIES) 
	@rm -f test_des3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_des3_OBJECTS) $(test_des3_LDADD) $(LIBS)

test_dialog$(EXEEXT): $(test_dialog_OBJECTS) $(test_dialog_DEPENDENCIES) $(EXTRA_test_dialog_DEPENDENCIES) 
	@rm -f test_dialog$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dialog_OBJECTS) $(test_dialog_LDADD) $(LIBS)

test_digest$(EXEEXT): $(test_digest_OBJECTS) $(test_digest_DEPENDENCIES) $(EXTRA_test_digest_DEPENDENCIES) 
	@rm -f test_digest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_digest_OBJECTS) $(test_digest_LDADD) $(LIBS)

test_elasticsearch$(EXEEXT): $(test_elasticsearch_OBJECTS) $(test_elasticsearch_DEPENDENCIES) $(EXTRA_test_elasticsearch_DEPENDENCIES) 
	@rm -f test_elasticsearch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_elasticsearch_OBJECTS) $(test_elasticsearch_LDADD) $(LIBS)

test_entity$(EXEEXT): $(test_entity_OBJECTS) $(test_entity_DEPENDENCIES) $(EXTRA_test_entity_DEPENDENCIES) 
	@rm -f test_entity$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_entity_OBJECTS) $(test_entity_LDADD) $(LIBS)

test_event$(EXEEXT): $(test_event_OBJECTS) $(test_event_DEPENDENCIES) $(EXTRA_test_event_DEPENDENCIES) 
	@rm -f test_event$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_event_OBJECTS) $(test_event_LDADD) $(LIBS)

test_expat$(EXEEXT): $(test_expat_OBJECTS) $(test_expat_DEPENDENCIES) $(EXTRA_test_expat_DEPENDENCIES) 
	@rm -f test_expat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_expat_OBJECTS) $(test_expat_LDADD) $(LIBS)

test_file$(EXEEXT): $(test_file_OBJECTS) $(test_file_DEPENDENCIES) $(EXTRA_test_file_DEPENDENCIES) 
	@rm -f test_file$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_file_OBJECTS) $(test_file_LDADD) $(LIBS)

test_file_config$(EXEEXT): $(test_file_config_OBJECTS) $(test_file_config_DEPENDENCIES) $(EXTRA_test_file_config_DEPENDENCIES) 
	@rm -f test_file_config$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_file_config_OBJECTS) $(test_file_config_LDADD) $(LIBS)

test_ftp$(EXEEXT): $(test_ftp_OBJECTS) $(test_ftp_DEPENDENCIES) $(EXTRA_test_ftp_DEPENDENCIES) 
	@rm -f test_ftp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ftp_OBJECTS) $(test_ftp_LDADD) $(LIBS)

test_header$(EXEEXT): $(test_header_OBJECTS) $(test_header_DEPENDENCIES) $(EXTRA_test_header_DEPENDENCIES) 
	@rm -f test_header$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_header_OBJECTS) $(test_header_LDADD) $(LIBS)

test_http$(EXEEXT): $(test_http_OBJECTS) $(test_http_DEPENDENCIES) $(EXTRA_test_http_DEPENDENCIES) 
	@rm -f test_http$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_http_OBJECTS) $(test_http_LDADD) $(LIBS)

test_https$(EXEEXT): $(test_https_OBJECTS) $(test_https_DEPENDENCIES) $(EXTRA_test_https_DEPENDENCIES) 
	@rm -f test_https$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_https_OBJECTS) $(test_https_LDADD) $(LIBS)

test_imap$(EXEEXT): $(test_imap_OBJECTS) $(test_imap_DEPENDENCIES) $(EXTRA_test_imap_DEPENDENCIES) 
	@rm -f test_imap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_imap_OBJECTS) $(test_imap_LDADD) $(LIBS)

test_interrupt$(EXEEXT): $(test_interrupt_OBJECTS) $(test_interrupt_DEPENDENCIES) $(EXTRA_test_interrupt_DEPENDENCIES) 
	@rm -f test_interrupt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_interrupt_OBJECTS) $(test_interrupt_LDADD) $(LIBS)

test_ipaddress$(EXEEXT): $(test_ipaddress_OBJECTS) $(test_ipaddress_DEPENDENCIES) $(EXTRA_test_ipaddress_DEPENDENCIES) 
	@rm -f test_ipaddress$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ipaddress_OBJECTS) $(test_ipaddress_LDADD) $(LIBS)

test_json$(EXEEXT): $(test_json_OBJECTS) $(test_json_DEPENDENCIES) $(EXTRA_test_json_DEPENDENCIES) 
	@rm -f test_json$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_json_OBJECTS) $(test_json_LDADD) $(LIBS)

test_ldap$(EXEEXT): $(test_ldap_OBJECTS) $(test_ldap_DEPENDENCIES) $(EXTRA_test_ldap_DEPENDENCIES) 
	@rm -f test_ldap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ldap_OBJECTS) $(test_ldap_LDADD) $(LIBS)

test_log$(EXEEXT): $(test_log_OBJECTS) $(test_log_DEPENDENCIES) $(EXTRA_test_log_DEPENDENCIES) 
	@rm -f test_log$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_log_OBJECTS) $(test_log_LDADD) $(LIBS)

test_magic$(EXEEXT): $(test_magic_OBJECTS) $(test_magic_DEPENDENCIES) $(EXTRA_test_magic_DEPENDENCIES) 
	@rm -f test_magic$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_magic_OBJECTS) $(test_magic_LDADD) $(LIBS)

test_memory_pool$(EXEEXT): $(test_memory_pool_OBJECTS) $(test_memory_pool_DEPENDENCIES) $(EXTRA_test_memory_pool_DEPENDENCIES) 
	@rm -f test_memory_pool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_memory_pool_OBJECTS) $(test_memory_pool_LDADD) $(LIBS)

test_mongodb$(EXEEXT): $(test_mongodb_OBJECTS) $(test_mongodb_DEPENDENCIES) $(EXTRA_test_mongodb_DEPENDENCIES) 
	@rm -f test_mongodb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_mongodb_OBJECTS) $(test_mongodb_LDADD) $(LIBS)

test_multipart$(EXEEXT): $(test_multipart_OBJECTS) $(test_multipart_DEPENDENCIES) $(EXTRA_test_multipart_DEPENDENCIES) 
	@rm -f test_multipart$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_multipart_OBJECTS) $(test_multipart_LDADD) $(LIBS)

test_notifier$(EXEEXT): $(test_notifier_OBJECTS) $(test_notifier_DEPENDENCIES) $(EXTRA_test_notifier_DEPENDENCIES) 
	@rm -f test_notifier$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_notifier_OBJECTS) $(test_notifier_LDADD) $(LIBS)

test_options$(EXEEXT): $(test_options_OBJECTS) $(test_options_DEPENDENCIES) $(EXTRA_test_options_DEPENDENCIES) 
	@rm -f test_options$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_options_OBJECTS) $(test_options_LDADD) $(LIBS)

test_orm$(EXEEXT): $(test_orm_OBJECTS) $(test_orm_DEPENDENCIES) $(EXTRA_test_orm_DEPENDENCIES) 
	@rm -f test_orm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_orm_OBJECTS) $(test_orm_LDADD) $(LIBS)

test_pcre$(EXEEXT): $(test_pcre_OBJECTS) $(test_pcre_DEPENDENCIES) $(EXTRA_test_pcre_DEPENDENCIES) 
	@rm -f test_pcre$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_pcre_OBJECTS) $(test_pcre_LDADD) $(LIBS)

test_pkcs10$(EXEEXT): $(test_pkcs10_OBJECTS) $(test_pkcs10_DEPENDENCIES) $(EXTRA_test_pkcs10_DEPENDENCIES) 
	@rm -f test_pkcs10$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_pkcs10_OBJECTS) $(test_pkcs10_LDADD) $(LIBS)

test_pkcs7$(EXEEXT): $(test_pkcs7_OBJECTS) $(test_pkcs7_DEPENDENCIES) $(EXTRA_test_pkcs7_DEPENDENCIES) 
	@rm -f test_pkcs7$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_pkcs7_OBJECTS) $(test_pkcs7_LDADD) $(LIBS)

test_plugin$(EXEEXT): $(test_plugin_OBJECTS) $(test_plugin_DEPENDENCIES) $(EXTRA_test_plugin_DEPENDENCIES) 
	@rm -f test_plugin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_plugin_OBJECTS) $(test_plugin_LDADD) $(LIBS)

test_pop3$(EXEEXT): $(test_pop3_OBJECTS) $(test_pop3_DEPENDENCIES) $(EXTRA_test_pop3_DEPENDENCIES) 
	@rm -f test_pop3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_pop3_OBJECTS) $(test_pop3_LDADD) $(LIBS)

test_process$(EXEEXT): $(test_process_OBJECTS) $(test_process_DEPENDENCIES) $(EXTRA_test_process_DEPENDENCIES) 
	@rm -f test_process$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_process_OBJECTS) $(test_process_LDADD) $(LIBS)

test_query_parser$(EXEEXT): $(test_query_parser_OBJECTS) $(test_query_parser_DEPENDENCIES) $(EXTRA_test_query_parser_DEPENDENCIES) 
	@rm -f test_query_parser$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_query_parser_OBJECTS) $(test_query_parser_LDADD) $(LIBS)

test_rdb$(EXEEXT): $(test_rdb_OBJECTS) $(test_rdb_DEPENDENCIES) $(EXTRA_test_rdb_DEPENDENCIES) 
	@rm -f test_rdb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rdb_OBJECTS) $(test_rdb_LDADD) $(LIBS)

test_rdb_client$(EXEEXT): $(test_rdb_client_OBJECTS) $(test_rdb_client_DEPENDENCIES) $(EXTRA_test_rdb_client_DEPENDENCIES) 
	@rm -f test_rdb_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rdb_client_OBJECTS) $(test_rdb_client_LDADD) $(LIBS)

test_rdb_server$(EXEEXT): $(test_rdb_server_OBJECTS) $(test_rdb_server_DEPENDENCIES) $(EXTRA_test_rdb_server_DEPENDENCIES) 
	@rm -f test_rdb_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_rdb_server_OBJECTS) $(test_rdb_server_LDADD) $(LIBS)

test_redis$(EXEEXT): $(test_redis_OBJECTS) $(test_redis_DEPENDENCIES) $(EXTRA_test_redis_DEPENDENCIES) 
	@rm -f test_redis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_redis_OBJECTS) $(test_redis_LDADD) $(LIBS)

test_server$(EXEEXT): $(test_server_OBJECTS) $(test_server_DEPENDENCIES) $(EXTRA_test_server_DEPENDENCIES) 
	@rm -f test_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_server_OBJECTS) $(test_server_LDADD) $(LIBS)

test_services$(EXEEXT): $(test_services_OBJECTS) $(test_services_DEPENDENCIES) $(EXTRA_test_services_DEPENDENCIES) 
	@rm -f test_services$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_services_OBJECTS) $(test_services_LDADD) $(LIBS)

test_smtp$(EXEEXT): $(test_smtp_OBJECTS) $(test_smtp_DEPENDENCIES) $(EXTRA_test_smtp_DEPENDENCIES) 
	@rm -f test_smtp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_smtp_OBJECTS) $(test_smtp_LDADD) $(LIBS)

test_soap_client$(EXEEXT): $(test_soap_client_OBJECTS) $(test_soap_client_DEPENDENCIES) $(EXTRA_test_soap_client_DEPENDENCIES) 
	@rm -f test_soap_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_soap_client_OBJECTS) $(test_soap_client_LDADD) $(LIBS)

test_soap_server$(EXEEXT): $(test_soap_server_OBJECTS) $(test_soap_server_DEPENDENCIES) $(EXTRA_test_soap_server_DEPENDENCIES) 
	@rm -f test_soap_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_soap_server_OBJECTS) $(test_soap_server_LDADD) $(LIBS)

test_socket$(EXEEXT): $(test_socket_OBJECTS) $(test_socket_DEPENDENCIES) $(EXTRA_test_socket_DEPENDENCIES) 
	@rm -f test_socket$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_socket_OBJECTS) $(test_socket_LDADD) $(LIBS)

test_ssh_client$(EXEEXT): $(test_ssh_client_OBJECTS) $(test_ssh_client_DEPENDENCIES) $(EXTRA_test_ssh_client_DEPENDENCIES) 
	@rm -f test_ssh_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ssh_client_OBJECTS) $(test_ssh_client_LDADD) $(LIBS)

test_ssl_client$(EXEEXT): $(test_ssl_client_OBJECTS) $(test_ssl_client_DEPENDENCIES) $(EXTRA_test_ssl_client_DEPENDENCIES) 
	@rm -f test_ssl_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ssl_client_OBJECTS) $(test_ssl_client_LDADD) $(LIBS)

test_ssl_server$(EXEEXT): $(test_ssl_server_OBJECTS) $(test_ssl_server_DEPENDENCIES) $(EXTRA_test_ssl_server_DEPENDENCIES) 
	@rm -f test_ssl_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ssl_server_OBJECTS) $(test_ssl_server_LDADD) $(LIBS)

test_string$(EXEEXT): $(test_string_OBJECTS) $(test_string_DEPENDENCIES) $(EXTRA_test_string_DEPENDENCIES) 
	@rm -f test_string$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_string_OBJECTS) $(test_string_LDADD) $(LIBS)

test_tdb$(EXEEXT): $(test_tdb_OBJECTS) $(test_tdb_DEPENDENCIES) $(EXTRA_test_tdb_DEPENDENCIES) 
	@rm -f test_tdb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_tdb_OBJECTS) $(test_tdb_LDADD) $(LIBS)

test_thread$(EXEEXT): $(test_thread_OBJECTS) $(test_thread_DEPENDENCIES) $(EXTRA_test_thread_DEPENDENCIES) 
	@rm -f test_thread$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_thread_OBJECTS) $(test_thread_LDADD) $(LIBS)

test_timer$(EXEEXT): $(test_timer_OBJECTS) $(test_timer_DEPENDENCIES) $(EXTRA_test_timer_DEPENDENCIES) 
	@rm -f test_timer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_timer_OBJECTS) $(test_timer_LDADD) $(LIBS)

test_timestamp$(EXEEXT): $(test_timestamp_OBJECTS) $(test_timestamp_DEPENDENCIES) $(EXTRA_test_timestamp_DEPENDENCIES) 
	@rm -f test_timestamp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_timestamp_OBJECTS) $(test_timestamp_LDADD) $(LIBS)

test_timeval$(EXEEXT): $(test_timeval_OBJECTS) $(test_timeval_DEPENDENCIES) $(EXTRA_test_timeval_DEPENDENCIES) 
	@rm -f test_timeval$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_timeval_OBJECTS) $(test_timeval_LDADD) $(LIBS)

test_tokenizer$(EXEEXT): $(test_tokenizer_OBJECTS) $(test_tokenizer_DEPENDENCIES) $(EXTRA_test_tokenizer_DEPENDENCIES) 
	@rm -f test_tokenizer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_tokenizer_OBJECTS) $(test_tokenizer_LDADD) $(LIBS)

test_tree$(EXEEXT): $(test_tree_OBJECTS) $(test_tree_DEPENDENCIES) $(EXTRA_test_tree_DEPENDENCIES) 
	@rm -f test_tree$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_tree_OBJECTS) $(test_tree_LDADD) $(LIBS)

test_unixsocket_client$(EXEEXT): $(test_unixsocket_client_OBJECTS) $(test_unixsocket_client_DEPENDENCIES) $(EXTRA_test_unixsocket_client_DEPENDENCIES) 
	@rm -f test_unixsocket_client$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_unixsocket_client_OBJECTS) $(test_unixsocket_client_LDADD) $(LIBS)

test_unixsocket_server$(EXEEXT): $(test_unixsocket_server_OBJECTS) $(test_unixsocket_server_DEPENDENCIES) $(EXTRA_test_unixsocket_server_DEPENDENCIES) 
	@rm -f test_unixsocket_server$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_unixsocket_server_OBJECTS) $(test_unixsocket_server_LDADD) $(LIBS)

test_url$(EXEEXT): $(test_url_OBJECTS) $(test_url_DEPENDENCIES) $(EXTRA_test_url_DEPENDENCIES) 
	@rm -f test_url$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_url_OBJECTS) $(test_url_LDADD) $(LIBS)

test_vector$(EXEEXT): $(test_vector_OBJECTS) $(test_vector_DEPENDENCIES) $(EXTRA_test_vector_DEPENDENCIES) 
	@rm -f test_vector$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_vector_OBJECTS) $(test_vector_LDADD) $(LIBS)

test_zip$(EXEEXT): $(test_zip_OBJECTS) $(test_zip_DEPENDENCIES) $(EXTRA_test_zip_DEPENDENCIES) 
	@rm -f test_zip$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_zip_OBJECTS) $(test_zip_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f plugin/*.$(OBJEXT)
	-rm -f plugin/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test_application.Po
include ./$(DEPDIR)/test_arping.Po
include ./$(DEPDIR)/test_base64.Po
include ./$(DEPDIR)/test_bit_array.Po
include ./$(DEPDIR)/test_cache.Po
include ./$(DEPDIR)/test_cdb.Po
include ./$(DEPDIR)/test_certificate.Po
include ./$(DEPDIR)/test_command.Po
include ./$(DEPDIR)/test_compress.Po
include ./$(DEPDIR)/test_crl.Po
include ./$(DEPDIR)/test_curl.Po
include ./$(DEPDIR)/test_date.Po
include ./$(DEPDIR)/test_dbi.Po
include ./$(DEPDIR)/test_des3.Po
include ./$(DEPDIR)/test_dialog.Po
include ./$(DEPDIR)/test_digest.Po
include ./$(DEPDIR)/test_elasticsearch.Po
include ./$(DEPDIR)/test_entity.Po
include ./$(DEPDIR)/test_event.Po
include ./$(DEPDIR)/test_expat.Po
include ./$(DEPDIR)/test_file.Po
include ./$(DEPDIR)/test_file_config.Po
include ./$(DEPDIR)/test_ftp.Po
include ./$(DEPDIR)/test_header.Po
include ./$(DEPDIR)/test_http.Po
include ./$(DEPDIR)/test_https.Po
include ./$(DEPDIR)/test_imap.Po
include ./$(DEPDIR)/test_interrupt.Po
include ./$(DEPDIR)/test_ipaddress.Po
include ./$(DEPDIR)/test_json.Po
include ./$(DEPDIR)/test_ldap.Po
include ./$(DEPDIR)/test_log.Po
include ./$(DEPDIR)/test_magic.Po
include ./$(DEPDIR)/test_memory_pool.Po
include ./$(DEPDIR)/test_mongodb.Po
include ./$(DEPDIR)/test_multipart.Po
include ./$(DEPDIR)/test_notifier.Po
include ./$(DEPDIR)/test_options.Po
include ./$(DEPDIR)/test_orm.Po
include ./$(DEPDIR)/test_pcre.Po
include ./$(DEPDIR)/test_pkcs10.Po
include ./$(DEPDIR)/test_pkcs7.Po
include ./$(DEPDIR)/test_plugin.Po
include ./$(DEPDIR)/test_pop3.Po
include ./$(DEPDIR)/test_process.Po
include ./$(DEPDIR)/test_query_parser.Po
include ./$(DEPDIR)/test_rdb.Po
include ./$(DEPDIR)/test_rdb_client.Po
include ./$(DEPDIR)/test_rdb_server.Po
include ./$(DEPDIR)/test_redis.Po
include ./$(DEPDIR)/test_server.Po
include ./$(DEPDIR)/test_services.Po
include ./$(DEPDIR)/test_smtp.Po
include ./$(DEPDIR)/test_soap_client.Po
include ./$(DEPDIR)/test_soap_server.Po
include ./$(DEPDIR)/test_socket.Po
include ./$(DEPDIR)/test_ssh_client.Po
include ./$(DEPDIR)/test_ssl_client.Po
include ./$(DEPDIR)/test_ssl_server.Po
include ./$(DEPDIR)/test_string.Po
include ./$(DEPDIR)/test_tdb.Po
include ./$(DEPDIR)/test_thread.Po
include ./$(DEPDIR)/test_timer.Po
include ./$(DEPDIR)/test_timestamp.Po
include ./$(DEPDIR)/test_timeval.Po
include ./$(DEPDIR)/test_tokenizer.Po
include ./$(DEPDIR)/test_tree.Po
include ./$(DEPDIR)/test_unixsocket_client.Po
include ./$(DEPDIR)/test_unixsocket_server.Po
include ./$(DEPDIR)/test_url.Po
include ./$(DEPDIR)/test_vector.Po
include ./$(DEPDIR)/test_zip.Po
include plugin/$(DEPDIR)/product1.Plo
include plugin/$(DEPDIR)/product2.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf plugin/.libs plugin/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
../reset.color.log: ../reset.color
	@p='../reset.color'; \
	b='../reset.color'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f plugin/$(DEPDIR)/$(am__dirstamp)
	-rm -f plugin/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) plugin/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) plugin/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


test: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	../make_test.sh application.test base64.test bit_array.test cache.test cdb.test certificate.test command.test compress.test crl.test date.test des3.test dialog.test digest.test entity.test expat.test file.test file_config.test header.test http.test https.test interrupt.test json.test log.test memory_pool.test multipart.test notifier.test options.test pcre.test pkcs10.test pkcs7.test plugin.test process.test query_parser.test rdb.test rdb_client_server.test server.test server_rpc.test services.test soap_client.test soap_server.test ssl_client_server.test string.test timer.test timestamp.test timeval.test tokenizer.test tree.test unixsocket.test url.test vector.test zip.test ../reset.color

clean-local:
	-rm -rf out err core .libs *.bb* *.da *.gc* *.log test_log.log* tmp/* \
			trace.*.[0-9]*  object.*.[0-9]* stack.*.[0-9]* mempool.*.[0-9]*

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
